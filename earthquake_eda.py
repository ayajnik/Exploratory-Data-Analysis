# -*- coding: utf-8 -*-
"""earthquake eda

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WriWpwsiHakn7bqWOhGUaLlk60r3csmL
"""

# -*- coding: utf-8 -*-
"""vinay

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1e9Q0EkVZHON6YKsKupm2GZb1qzWiy5V-
"""

#importing the libraries
import pandas as pd
import os
import sys
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn_pandas import CategoricalImputer
print("\n")
print("Libraries imported.")
print("\n")

#importing the dataset
earthquake_dataset = pd.read_csv("earthquake.csv")
print("\n")
print("Dataset imported.")
print("\n")
print("Basic information abouth the file are:")
b = earthquake_dataset.info()
print("\n")
print(b)
print("And the basic description about the dataset:")
c = earthquake_dataset.describe()
print("\n")
print(c)
print("Basic overview of the file:")
a = earthquake_dataset.head(5)
print(a)
print("\n")
print("Total number of rows in this file are:", len(earthquake_dataset))
print("\n")

#checking for missing values
print ("It will print True if there is any missing value in the file or else it will print False", earthquake_dataset.isnull().any())

#handling the missing value
#for categorical data, we calculate the (mode) value
d = earthquake_dataset['ID'].mode()
print("The highest occurring value in ID column is,",d)
print("\n")
e = earthquake_dataset['Source'].mode()
print("The highest occurring value in Source column is,",e)
print("\n")
f = earthquake_dataset['Location Source'].mode()
print("The highest occurring value in Source column is,",f)
print("\n")
g = earthquake_dataset['Magnitude Source'].mode()
print("The highest occurring value in Source column is,",g)
print("\n")
h = earthquake_dataset['Status'].mode()
print("The highest occurring value in Source column is,",h)
print("\n")
#for ID column
df_new = earthquake_dataset.fillna(earthquake_dataset.mode().iloc[15])
#df_new.tail(5)
#for Source column
df_new_1 = df_new.fillna(df_new.mode().iloc[16])
df_new_2 = df_new_1.fillna(df_new_1.mode().iloc[17])
df_new_3 = df_new.fillna(df_new_2.mode().iloc[18])
df_new_4 = df_new_3.fillna(df_new_3.mode().iloc[19])
#now printing the updated dataset
print(df_new_4.head(5))

#for sanity check, checking if any missing values in categorical columns
df_new_4.isnull().any()

#now we move on to the numerical columns
df_new_5 = df_new_4.fillna(df_new_4.mean().iloc[6])
df_new_6 = df_new_5.fillna(df_new_5.mean().iloc[7])
df_new_7 = df_new_6.fillna(df_new_6.mean().iloc[9])
df_new_8 = df_new_7.fillna(df_new_7.mean().iloc[10])
df_new_9 = df_new_8.fillna(df_new_8.mean().iloc[11])
df_new_9.head(12)

#another check on missing values
df_new_9.isnull().any()

#now lets examine the data by plotting the graphs
time_series = sns.tsplot([df_new_9.Depth], color="indianred")
time_series

time_series_1 = sns.tsplot([df_new_9.Magnitude], color="indianred")
time_series_1

box_plot = sns.boxplot(x='Type',y='Depth',data=df_new_9,palette='rainbow')
box_plot

## there are quite outliers

box_plot_1 = sns.boxplot(x='Type',y='Magnitude',data=df_new_9,palette='rainbow')
box_plot_1

strip_plot = sns.stripplot(x="Latitude",y="Status",data=df_new_9,jitter=True,hue='Magnitude Type',palette='Set1')
strip_plot

strip_plot_1 = sns.stripplot(x="Longitude",y="Status",data=df_new_9,jitter=True,hue='Magnitude Type',palette='Set1')
strip_plot_1

sns.set(style="darkgrid")
sns.relplot(x="ID", y="Depth Error", data=df_new_9)

ax = sns.catplot(x='ID',y='Longitude',hue='Status',kind='point',data=df_new_9)
ax.fig.autofmt_xdate()

corr = df_new_9.corr()
ax = sns.heatmap(
    corr, 
    vmin=-1, vmax=1, center=0,
    cmap=sns.diverging_palette(20, 220, n=200),
    square=True
)
ax.set_xticklabels(
    ax.get_xticklabels(),
    rotation=45,
    horizontalalignment='right'
);